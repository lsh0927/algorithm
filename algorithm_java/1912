import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.StringTokenizer;

public class Main {

    static int max;
    static int[] arr;
    static Integer[] dp;
    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());


        arr=new int[N];
        dp=new Integer[N];
        StringTokenizer st= new StringTokenizer(br.readLine());

        for (int i=0;i<N;i++){
            arr[i]=Integer.parseInt(st.nextToken());
        }

        dp[0] = arr[0];
        max = arr[0];


        // dp의 마지막 index는 N-1이므로 N-1부터 Top-Down 탐색
        recur(N - 1);

        System.out.println(max);

    }


    static int recur(int n){

        if (dp[n]==null){
            dp[n] = Math.max(recur(n- 1) + arr[n], arr[n]);

            max=Math.max(dp[n],max);
        }

        return dp[n];
    }
}