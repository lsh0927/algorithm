import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class 2437{

    // 원소가 추가됨에 따라 표현할 수 있는 숫자범위 표현
    static Set<Integer> set= new HashSet<>();

    public static void main(String[] args)throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N=Integer.parseInt(br.readLine());

        int[] arr= new int[N];
        StringTokenizer st= new StringTokenizer(br.readLine());
        for (int i=0;i<N;i++){
            arr[i]= Integer.parseInt(st.nextToken());
        }

        Arrays.sort(arr);
        set.add(arr[0]);

        for (int i=1;i<N;i++){
            // set의 원소를 임시로 저장할 리스트
            List<Integer> tempList = new ArrayList<>();

            // arr[i]의 값에 따라, set의 원소를 전부 순회하면서, 중복되지 않는 값을 tempList에 추가
            for (int element : set) {
                tempList.add(element + arr[i]);
            }

            // tempList에 있는 값을 set에 추가
            set.addAll(tempList);
        }

        ArrayList<Integer> list = new ArrayList<>(set); // set을 ArrayList로 변경
        Collections.sort(list); // 오름차순 정렬

        for (int i=0;i< list.size()-1;i++) {
            if (i + 1 != list.get(i)) {
                System.out.println(i+1);
                break;
            }
        }
    }
}
