import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

    public static int N;
    public static int M;
    public static int[] arr;

    static int[] input;
    public static boolean[] visit;
    public static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());

        st= new StringTokenizer(br.readLine());
        input= new int[N];

        for (int i=0;i<N;i++){
            input[i]=Integer.parseInt(st.nextToken());
        }

        Arrays.sort(input);
        arr = new int[M];
        visit = new boolean[N];


        dfs(0);

        System.out.println(sb.toString());
    }
    static void dfs(int depth){
        if (depth==M){
            for (int i : arr) {
                sb.append(i+" ");
            }
            sb.append("\n");
            return;
        }


        for (int i=0;i<N;i++){
            if (!visit[i]){
                visit[i]=true;
                arr[depth]=input[i];
                dfs(depth+1);
                visit[i]=false;
            }
        }
    }

}