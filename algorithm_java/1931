import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.*;

public class Main {

    static class Node implements Comparable<Node>{
        int s;
        int e;

        public Node(int s, int e){
            this.s=s;
            this.e=e;
        }

        @Override
        public int compareTo(Node o){
            if (this.e==o.e){
                return this.s-o.s;
            }
            return this.e-o.e;
        }
    }
    public static void main(String[] args) throws Exception{

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PriorityQueue<Node> pq= new PriorityQueue<>();

        int n= Integer.parseInt(br.readLine());
        StringTokenizer st;
        for (int i=0;i<n;i++){
            st= new StringTokenizer(br.readLine());
            int s=Integer.parseInt(st.nextToken());
            int e=Integer.parseInt(st.nextToken());

            pq.offer(new Node(s,e));
        }

        int cnt=0;
        int last=0;
        for (int i=0;i<n;i++){
            Node node= pq.poll();
            if (last<=node.s){
                last=node.e;
                cnt++;
            }
        }

        System.out.println(cnt);
   }
}

