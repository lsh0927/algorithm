// import java.io.BufferedReader;
// import java.io.InputStreamReader;
// import java.util.StringTokenizer;

// public class Solution {

//     public static void main(String[] args) throws Exception {

//         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

//         int T = Integer.parseInt(br.readLine());

//         for (int t = 0; t < T; t++) {

//             int N = Integer.parseInt(br.readLine());

//             int[] arr = new int[N];

//             StringTokenizer st = new StringTokenizer(br.readLine());
//             for (int i = 0; i < N; i++) {
//                 arr[i] = Integer.parseInt(st.nextToken());
//             }

//             int max = 0;
//             int maxIdx = 0;
//             for (int i = 0; i < N; i++) {
//                 if (arr[i] > arr[maxIdx]) {
//                     max = arr[i];
//                     maxIdx = i;
//                 }
//             }

//             long sum = 0;

//             // 최대값 이전까지의 부분
//             for (int i = 0; i < maxIdx; i++) {
//                 sum += (max - arr[i]);
//             }

//             // 최대값 이후의 부분
//             int curMaxIdx = maxIdx + 1;
//             while (curMaxIdx < N) {
//                 int newMax = 0;
//                 int newMaxIdx = 0;
//                 // 현재 최대값 이후의 부분에서 최대값과 최대값의 위치를 찾음
//                 for (int i = curMaxIdx; i < N; i++) {
//                     if (arr[i] > newMax) {
//                         newMax = arr[i];
//                         newMaxIdx = i;
//                     }
//                 }
//                 // 최대값을 찾았으면 최대값 이후의 부분에서 최대값을 빼고 sum에 더함
//                 for (int i = curMaxIdx; i < newMaxIdx; i++) {
//                     sum += (newMax - arr[i]);
//                 }
//                 curMaxIdx = newMaxIdx + 1;
//             }

//             System.out.println("#" + (t + 1) + " " + sum);
//         }
//     }
// }

import java.io.*;
import java.util.*;
 
public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        long tc = Long.parseLong(br.readLine());
        for (int j = 0; j < tc; j++) {
            int n = Integer.parseInt(br.readLine());
            long [] list = new long[n];
            StringTokenizer st = new StringTokenizer(br.readLine());
            for (int i = 0; i < n; i++){
                long k = Long.parseLong(st.nextToken());
                list[i] = k;
            }
            long maxPrice = 0;
            long [] temp = new long [n];
            long result = 0;
            for (int i = n-1; i >= 0; i--) {
                if (maxPrice < list[i])
                    maxPrice = list[i];
                temp[i] = maxPrice - list[i];
            }
            for (int i = 0; i < n; i++){
                result += temp[i];
            }
            System.out.println("#"+ (j + 1)+ " "+ result);
        }
    }
}