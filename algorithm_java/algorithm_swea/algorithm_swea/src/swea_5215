import java.util.*;
import java.io.*;

public class Solution {

    static int ans;
    static int N,L;
    static List<int[]> info;

    public static void main(String[] args) throws IOException {
        BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
        int T=Integer.parseInt(br.readLine());

        for(int tc=1; tc<=T; tc++) {
            
            StringTokenizer st= new StringTokenizer(br.readLine());
            //재료의 수, 제한 칼로리
            N= Integer.parseInt(st.nextToken());
            L= Integer.parseInt(st.nextToken());

            // PriorityQueue<int[]> pq = new PriorityQueue<>((o1, o2) -> {
            //     if (o1[1] == o2[1]) {
            //         return o1[0] - o2[0]; // 두 번째 값이 같으면 첫 번째 값의 오름차순으로 정렬
            //     }
            //     return Integer.compare(o2[1], o1[1]); // 두 번째 값이 다르면 두 번째 값의 내림차순으로 정렬
            // });
            
            info= new ArrayList<>();

            for(int i=0;i<N;i++){
                st= new StringTokenizer(br.readLine());

                //각 순서의 재료 정보( 점수 및 칼로리 )
                int score= Integer.parseInt(st.nextToken());
                int cal= Integer.parseInt(st.nextToken());

         //       pq.add(new int[]{score,kcal});
                info.add(new int[]{score,cal});
            }

            ans=0;
            dfs(0,0,0);
            

              //최대 칼로리에 맞게 최대 점수를 구해야 함-> 우선 순위 큐


                System.out.println("#" + tc + " " + ans);
        }     
            
    }
    public static void dfs(int idx, int score, int cal){
        if (cal>L) {
            return;
        }
        if (idx==N) {
            ans=Math.max(ans, score);
            return;
        }
        //담는다.
        dfs(idx+1, score + info.get(idx)[0], cal+info.get(idx)[1]);

        //안담고 넘어간다.
        dfs(idx+1, score, cal);
    }
}

/*
public static void main(String[] args) throws Exception {
	BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
	int tc= Integer.parseInt(br.readLine());
	StringBuilder sb= new StringBuilder();
	for(int t= 1; t<= tc ;t++) {
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		int n = Integer.parseInt(st.nextToken()); //재료의 수
		int l = Integer.parseInt(st.nextToken()); //제한 칼로리
		int[] T = new int[n+1];
		int[] K = new int[n+1];
		for(int i=1;i<=n;i++) {
			StringTokenizer st1 = new StringTokenizer(br.readLine()," ");
			T[i]=Integer.parseInt(st1.nextToken());
			K[i]=Integer.parseInt(st1.nextToken());
		}
		
		int[][] dp=new int[n+1][l+1];
		
		for(int i=1;i<=n;i++) {
			for(int j=0;j<=l;j++) {
			if(j<K[i]) {
					dp[i][j]=dp[i-1][j];
				}
				else {
					dp[i][j]=Math.max(dp[i-1][j-K[i]]+T[i], dp[i-1][j]);
				}
			}
		}	
		sb.append("#").append(t).append(" ").append(dp[n][l]).append("\n");
	}
	
	System.out.print(sb);
}
*/