import java.util.*;
import java.io.*;

public class Solution {

	static int count;
	static int[] result;
	static int N;
	public static void main(String[] args) {

        BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
        int T= Integer.parseInt(br.readLine());

		for(int tc=1;tc<=T; tc++) {
            N= Integer.parseInt(br.readLine());

			result = new int[N];
			count = 0;			
            dfs(0);
			
            System.out.println("#"+tc+" "+count);
		}
	}

	static void dfs(int idx) {
		if (idx==N) {
			count++;
			return;
		}
		
		for(int i=0; i<N; i++) {
			result[idx]=i;
			if(isOk(idx)){
				dfs(idx+1);
			}
		}
	}
	static boolean isOk(int idx) {
		for(int i=0; i<idx; i++) { // 지금 테스트할 퀸, 이전 퀸들의 위치들 보면서 괜찮은지 판단(열 비교 + 양 대각) 
			if (result[idx] == result[i] || Math.abs(idx-i) == Math.abs(result[idx]-result[i])) {
				return false;
			}
		}
		return true;
	}
}