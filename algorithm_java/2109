import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.*;

public class Main {

   static class Node implements Comparable<Node>{
       int p;
       int d;

       public Node(int p, int d){
           this.d=d;
           this.p=p;
       }

       @Override
       public int compareTo(Node o){
           if (this.p==o.p){
               return o.d-this.d;
           }
           return o.p-this.p;
       }
   }

    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int n= Integer.parseInt(br.readLine());
        StringTokenizer st;

        List<Node> list= new ArrayList<>();

        for (int i=0;i<n;i++){
            st= new StringTokenizer(br.readLine());

            int p= Integer.parseInt(st.nextToken());
            int d= Integer.parseInt(st.nextToken());
            list.add(new Node(p,d));

        }

        Collections.sort(list);


           int sum=0;
//        int date=0;
//        for (Node node : pq) {
//            if (date==node.d){
//                continue;
//            }
//            int val=node.p;
//            sum+=val;
//
//            date=node.d;
//        }

        boolean[] check= new boolean[10001];

        for (int i=0;i<n;i++){
            for (int j=list.get(i).d; j>=1; j--){
                if (!check[j]){
                    check[j]=true;
                    sum+=list.get(i).p;
                    break;
                }
            }
        }


        System.out.println(sum);
    }



}